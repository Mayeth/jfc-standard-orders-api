<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="jfc-standard-get-retrieve-orders-test.xml" />
	<munit:test name="jfc-standard-get-retrieve-orders-success-test" doc:id="fa2f8248-e385-495b-ad72-9e028d051360" >
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when Select Customer Order ID" doc:id="1a6bb874-c4fe-44a6-ab82-1a579a65055e" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select Customer Order ID" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://get-retrieve-orders/get-retrieve-orders-success-response.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c4ff6878-e558-486a-8d4e-0ee71d377aeb">
				<munit:attributes value="#[output application/json --- readUrl('classpath://get-retrieve-orders/get-retrieve-orders-success-request.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="get:\orders\(orderId):jfc-standard-orders-api-config" doc:id="ce9966ca-979d-4b7e-9fad-e5e8df20fec9" name="get:\orders\(orderId):jfc-standard-orders-api-config" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals 200" doc:id="2df2102f-ea72-4df0-bf2a-dffcdaa7a10b" actual="#[vars.httpStatus]" expected="#[200 as Number]" />
		</munit:validation>
	</munit:test>
	<munit:test name="jfc-standard-get-retrieve-orders-failure-test" doc:id="cd449a8a-2067-4e2f-9a08-5ece92b43ba3" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Select Customer Order ID" doc:id="5bc94610-2541-4027-8344-aa0bf350ee23" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select Customer Order ID" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="cf46feb4-0057-4e22-bc89-210f2996db34" >
				<munit:attributes value="#[output application/json --- readUrl('classpath://get-retrieve-orders/get-retrieve-orders-failure-request.json')]" />
			</munit:set-event>
			<try doc:name="Try" doc:id="b212a1a0-427c-45c0-89e8-2add95f233c6" >
				<flow-ref doc:name="get:\orders\(orderId):jfc-standard-orders-api-config" doc:id="587ae4a0-7a9d-408a-b62a-527855a2fb83" name="get:\orders\(orderId):jfc-standard-orders-api-config" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="83e0f25f-f03a-4394-9fd6-b376c90f9bf1" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals 500" doc:id="0588c2c7-95c6-4c94-9afc-885c005108da" actual="#[vars.httpStatus]" expected="#[500 as Number]" />
		</munit:validation>
	</munit:test>

</mule>
